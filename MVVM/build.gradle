plugins {
    id 'com.android.library'
    id 'maven-publish'
//    id 'com.alibaba.arouter'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {

        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildFeatures {
//        viewBinding = true
            dataBinding = true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    api "org.jzl.lang:commons:0.0.5-alpha-1"
//    implementation "com.alibaba:arouter-api:$arouterVersion"
//    annotationProcessor "com.alibaba:arouter-compiler:$arouterVersion"
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// 解决javadoc打包乱码
javadoc {
    options {
        encoding "UTF-8"
        charSet "UTF-8"
        author true
        version true
        title "MVVM"
    }
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'org.jzl.android.mvvm'
                artifactId = 'MVVM'
                version = android.defaultConfig.versionName
                artifact sourcesJar
                artifact javadocJar
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'org.jzl.android.mvvm'
                artifactId = 'MVVM'
                version = android.defaultConfig.versionName

                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
}